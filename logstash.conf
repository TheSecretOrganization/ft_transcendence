input {
 gelf {
  port => 12201
 }
}


filter {
 mutate {
  remove_field => ["command"]
 }

 if [tag] == "redis" {
  grok {
   match => {"message" => "(?<void>.*) (?<void>[#\*]) (?<message>.*)"}
   overwrite => ["message"]
  }

  mutate {
   remove_field => ["void"]
  }
 }

 if [tag] == "django" {
  grok {
   match => {"message" => "\[%{LOGLEVEL:loglevel}\] %{DATA:module}: %{GREEDYDATA:message}"}
   overwrite => ["message"]
  }

  if "_grokparsefailure" in [tags] {
   grok {
    match => {"message" => '%{IP:source}:%{NUMBER:port} (?<void>.*) "%{GREEDYDATA:message}"'}
    overwrite => ["message"]
   }
  }

  mutate {
   remove_field => ["void", "tags"]
  }
 }

 if [tag] == "postgres" {
  grok {
   match => {"message" => "%{GREEDYDATA}:  %{GREEDYDATA:message}"}
   overwrite => ["message"]
  }
 }

 if [tag] in "nginx" {
  grok {
   match => {"message" => "%{IP:source} (?<void>.*)\] %{GREEDYDATA:message}"}
   overwrite => ["message"]
  }

  if "_grokparsefailure" in [tags] {
   grok {
    match => {"message" => '(?<void>.*) \[(?<loglevel>\w+)\] %{GREEDYDATA:message}'}
    overwrite => ["message"]
   }
  }
 }
}


output {
 elasticsearch {
  index => "logstash"
  hosts=> "${ELASTIC_HOSTS}"
  user=> "${ELASTIC_USER}"
  password=> "${ELASTIC_PASSWORD}"
  cacert=> "certs/ca/ca.crt"
 }
}
