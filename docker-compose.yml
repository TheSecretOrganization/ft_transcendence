name: ft

services:
  django:
    container_name: django
    build:
      context: django
      args:
        DJANGO_SUPERUSER_USERNAME: ${DJANGO_SUPERUSER_USERNAME}
    expose:
      - 8000
    init: true
    networks:
      - network
    volumes:
      - django-src:/app
      - static-files:/static
      - media-files:/media
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy

  nginx:
    container_name: nginx
    build: nginx
    ports:
      - 8080:80
    init: true
    networks:
      - network
    volumes:
      - nginx-src:/usr/share/nginx
      - static-files:/static
      - media-files:/media
    depends_on:
      - django

  postgres:
    container_name: postgres
    build:
      context: postgres
      args:
        POSTGRES_USER: ${POSTGRES_USER}
    ports:
      - 5432:5432
    networks:
      - network
    volumes:
      - postgres-data:/var/lib/postgresql/data
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 2s
      timeout: 2s
      retries: 5
      start_period: 5s

networks:
  network:
    name: network
    driver: bridge

volumes:
  django-src:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: ./django/src
  nginx-src:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: ./nginx/src
  static-files:
    driver: local
  media-files:
    driver: local
  postgres-data:
    driver: local
